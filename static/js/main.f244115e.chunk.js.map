{"version":3,"sources":["Components/StopwatchDisplay.js","Components/Controller.js","App.js","index.js"],"names":["stopwatchDisplay","props","transformOutput","time","output","length","hours","Math","floor","minutes","seconds","className","Controller","map","button","classList","selectAction","push","join","onClick","firstClickTime","App","useState","setTime","watchOn","setWatchOn","setSelectAction","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","start","stop","wait","event","timeDelay","timeStamp","console","log","reset","ReactDOM","render","document","getElementById"],"mappings":"2OAEe,SAASA,EAAiBC,GACrC,IAAIC,EAAgB,SAACC,GACjB,IAAIC,EAAOD,EAAK,GAIhB,OAHGC,EAAOC,OAAO,IACbD,EAAO,IAAIA,GAERA,GAEPD,EAAKF,EAAME,KACXG,EAAMC,KAAKC,MAAOL,EAAI,MACtBM,EAAQF,KAAKC,MAAOL,EAAO,IAAM,IACjCO,EAAQH,KAAKC,MAAOL,EAAO,IAAO,IACzBI,KAAKC,MAAML,EAAO,KAC/B,OACI,sBAAKQ,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACKT,EAAgBI,KAErB,qBAAKK,UAAU,kBAAf,eACA,qBAAKA,UAAU,gBAAf,SACKT,EAAgBO,KAErB,qBAAKE,UAAU,kBAAf,eACA,qBAAKA,UAAU,gBAAf,SACKT,EAAgBQ,QCxBlB,SAASE,EAAWX,GAI/B,OACI,qBAAKU,UAAU,aAAf,SAJQ,CACR,QAAQ,OAAO,OAAO,SAITE,KAAI,SAAAC,GACT,IAAIC,EAAU,CAAC,sBAIf,OAHGD,GAAQb,EAAMe,cACbD,EAAUE,KAAK,6BAEZ,wBAAQN,UAAWI,EAAUG,KAAK,KAAMC,QAASlB,EAAMa,GAAvD,SAAiEA,SCNxF,IAAIM,EAAe,EAmEJC,MAjEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA2BD,oBAAS,GAApC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAqCH,mBAAS,IAA9C,mBAAON,EAAP,KAAoBU,EAApB,KA+CA,OA7CAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAQxB,OAPAC,YAAS,IACJC,KAAKC,YAAUJ,IACfK,WAAU,WACLT,GACFD,GAAQ,SAAAW,GAAG,OAAIA,EAAM,QAGtB,WACLN,EAAYO,OACZP,EAAYQ,cAEb,CAACZ,IAiCF,sBAAKb,UAAU,MAAf,UACI,oBAAIA,UAAU,aAAd,uBACA,cAAC,EAAD,CAAkBR,KAAMA,IACxB,cAACS,EAAD,CACEI,aAAcA,EACdqB,MApCW,WACjBZ,GAAW,GACXC,EAAgB,UAmCVY,KAhCU,WAChBb,GAAW,GACXF,EAAQ,GACRG,EAAgB,SA8BVa,KA3BQ,SAACC,GACb,IAAIC,EAAUD,EAAME,UAAUtB,EAC9BuB,QAAQC,IAAIxB,EAAeoB,EAAME,UAAUD,GACxCA,EAAU,GAAKA,EAAU,KAExBhB,GAAW,GACXC,EAAgB,QAChBN,EAAe,GAEfA,EAAeoB,EAAME,WAmBrBG,MAfW,WACjBtB,EAAQ,GACRE,GAAW,GACXC,EAAgB,gBCnDpBoB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f244115e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function stopwatchDisplay(props) {\r\n    let transformOutput=(time)=>{\r\n        let output=time+\"\"\r\n        if(output.length<2){\r\n            output=\"0\"+output\r\n        }\r\n        return output\r\n    }\r\n    let time=props.time\r\n    let hours=Math.floor((time / (6000 * 60)))\r\n    let minutes=Math.floor((time / 6000)%60)\r\n    let seconds=Math.floor((time / 100) % 60)\r\n    let mSeconds=Math.floor(time % 100)\r\n    return (\r\n        <div className=\"display\">\r\n            <div className=\"display-block\">\r\n                {transformOutput(hours)}\r\n            </div>\r\n            <div className=\"display-devider\">:</div>\r\n            <div className=\"display-block\">\r\n                {transformOutput(minutes)}\r\n            </div>\r\n            <div className=\"display-devider\">:</div>\r\n            <div className=\"display-block\">\r\n                {transformOutput(seconds)}\r\n            </div> \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Controller(props) {\r\n    let buttons=[\r\n        \"start\",\"stop\",\"wait\",\"reset\"\r\n    ]\r\n    return (\r\n        <div className=\"controller\">\r\n            {buttons.map(button=>{\r\n                let classList=[\"controller__button\"]\r\n                if(button==props.selectAction){\r\n                    classList.push(\"controller__button-active\")\r\n                }\r\n                return <button className={classList.join(\" \")} onClick={props[button]}>{button}</button>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React,{useState,useEffect} from \"react\"\nimport { interval, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport StopwatchDisplay from './Components/StopwatchDisplay';\nimport Controller from './Components/Controller';\n\nlet firstClickTime=0\n\nfunction App() {\n  const [time, setTime] = useState(0)\n  const [watchOn,setWatchOn]=useState(false)\n  const [selectAction,setSelectAction]=useState(\"\")\n\n  useEffect(() => {\n    const unsubscribe = new Subject();\n    interval(10)\n        .pipe(takeUntil(unsubscribe))\n        .subscribe(() => {\n          if (watchOn) {\n            setTime(val => val + 1);\n          }\n        });\n    return () => {\n      unsubscribe.next();\n      unsubscribe.complete();\n    };\n  }, [watchOn]);\n\n  const startHandler=()=>{\n    setWatchOn(true)\n    setSelectAction(\"start\")\n  }\n\n  const stopHandler=()=>{\n    setWatchOn(false)\n    setTime(0)\n    setSelectAction(\"stop\")\n  }\n \n  let waitHandler=(event)=>{\n      let timeDelay=event.timeStamp-firstClickTime\n      console.log(firstClickTime,event.timeStamp,timeDelay);\n      if(timeDelay>1 && timeDelay<300){\n\n          setWatchOn(false)\n          setSelectAction(\"wait\")\n          firstClickTime=0\n      }else{\n          firstClickTime=event.timeStamp\n      }\n  }\n\n  const resetHandler=()=>{\n    setTime(0)\n    setWatchOn(true)\n    setSelectAction(\"start\")\n  }\n  \n  return (\n    <div className=\"app\">\n        <h1 className=\"app__title\">Stopwatch</h1>\n        <StopwatchDisplay time={time}></StopwatchDisplay>\n        <Controller \n          selectAction={selectAction} \n          start={startHandler} \n          stop={stopHandler} \n          wait={waitHandler} \n          reset={resetHandler}>\n        </Controller>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}